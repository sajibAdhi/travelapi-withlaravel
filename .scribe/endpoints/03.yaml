name: 'Public endpoint'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/travels
    metadata:
      groupName: 'Public endpoint'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Travel'
      description: 'Get a list of public Travel records.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": [{"id": 123b13bn-2342-2342-2342-234234234234, "name": "Travel 1", "slug": "travel-1", "description": "Description of travel 1", "number_of_days": 5, "number_of_nights": 4}, {"id": 123b13bn-2342-2342-2342-234234234234, "name": "Travel 2", "slug": "travel-2", "description": "Description of travel 2", "number_of_days": 5, "number_of_nights": 4}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/travels/{travel_slug}/tours'
    metadata:
      groupName: 'Public endpoint'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Travel Tours'
      description: 'Get a list of Travel tours.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      travel_slug:
        name: travel_slug
        description: 'The slug of the travel.'
        required: true
        example: 9968352d-b1ee-4b23-bb49-b5931da0466f
        type: string
        custom: []
    cleanUrlParameters:
      travel_slug: 9968352d-b1ee-4b23-bb49-b5931da0466f
    queryParameters:
      priceFrom:
        name: priceFrom
        description: 'The minimum price of the tour.'
        required: false
        example: 1000
        type: integer
        custom: []
      priceTo:
        name: priceTo
        description: 'The maximum price of the tour.'
        required: false
        example: 2000
        type: integer
        custom: []
      dateFrom:
        name: dateFrom
        description: 'date The starting date of the tour.'
        required: false
        example: '2021-01-01'
        type: string
        custom: []
      dateTo:
        name: dateTo
        description: 'date The ending date of the tour.'
        required: false
        example: '2021-01-10'
        type: string
        custom: []
      sortBy:
        name: sortBy
        description: 'The field to sort by.'
        required: false
        example: price
        type: string
        custom: []
      sortOrder:
        name: sortOrder
        description: 'The order to sort by.'
        required: false
        example: asc
        type: string
        custom: []
    cleanQueryParameters:
      priceFrom: 1000
      priceTo: 2000
      dateFrom: '2021-01-01'
      dateTo: '2021-01-10'
      sortBy: price
      sortOrder: asc
    bodyParameters:
      priceFrom:
        name: priceFrom
        description: ''
        required: false
        example: 368378.8484
        type: number
        custom: []
      priceTo:
        name: priceTo
        description: ''
        required: false
        example: 1.565114883
        type: number
        custom: []
      dateFrom:
        name: dateFrom
        description: 'Must be a valid date.'
        required: false
        example: '2023-06-19T09:51:01'
        type: string
        custom: []
      dateTo:
        name: dateTo
        description: 'Must be a valid date.'
        required: false
        example: '2023-06-19T09:51:01'
        type: string
        custom: []
      sortBy:
        name: sortBy
        description: 'Must be one of <code>price</code>.'
        required: false
        example: price
        type: string
        custom: []
      sortOrder:
        name: sortOrder
        description: 'Must be one of <code>asc</code> or <code>desc</code>.'
        required: false
        example: asc
        type: string
        custom: []
    cleanBodyParameters:
      priceFrom: 368378.8484
      priceTo: 1.565114883
      dateFrom: '2023-06-19T09:51:01'
      dateTo: '2023-06-19T09:51:01'
      sortBy: price
      sortOrder: asc
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": [{"id": 1, "name": "Tour 1", "starting_date": "2021-01-01", "ending_date": "2021-01-10", "price": "1000.00"}], "links": {"first": "http://localhost:8000/api/v1/travels/1/tours?page=1", "last": "http://localhost:8000/api/v1/travels/1/tours?page=1", "prev": null, "next": null}, "meta": {"current_page": 1, "from": 1, "last_page": 1, "links": [{"url": null, "label": "&laquo; Previous", "active": false}, {"url": "http://localhost:8000/api/v1/travels/1/tours?page=1", "label": 1, "active": true}, {"url": null, "label": "Next &raquo;", "active": false}], "path": "http://localhost:8000/api/v1/travels/1/tours", "per_page": 15, "to": 1, "total": 1}}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"priceFrom": ["The price from must be an integer."], "priceTo": ["The price to must be an integer."], "dateFrom": ["The date from is not a valid date."], "dateTo": ["The date to is not a valid date."], "sortBy": ["The selected sortBy is invalid."], "sortOrder": ["The selected sortOrder is invalid."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
